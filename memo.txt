スクリプトの実行方法

ターミナル1: ブリッジスクリプト（mcu_navstack_bridge.py）を実行します。
ros2 run your_package_name mcu_navstack_bridge.py

ターミナル2: テスト用のMQTTブローカースクリプト（mqtt_test_broker.py）を実行します。
python3 mqtt_test_broker.py
これにより、MCUからのデータをシミュレートしてMQTTブローカーに公開します。

ターミナル3: このROSテストスクリプト（ros_test_node.py）を実行します。
ros2 run your_package_name ros_test_node.py



python3 -m venv my_mqtt_env
source my_mqtt_env/bin/activate
... deactivate


user@user-EPIC-TGH7:~/docker/ros_mqtt_bridge_container$ cd python/
user@user-EPIC-TGH7:~/docker/ros_mqtt_bridge_container/python$ vcs import --input ../
.git/   python/ 
user@user-EPIC-TGH7:~/docker/ros_mqtt_bridge_container/python$ vcs import --input ../packages.repos --workers 1
=== ./ros_mqtt_bridge (git) ===
Cloning into '.'...
user@user-EPIC-TGH7:~/docker/ros_mqtt_bridge_container/python$ ls
ros_mqtt_bridge


キーボードで操作: キーボードを使用してロボットを操作するためのノードを起動。
$ ros2 run teleop_twist_keyboard teleop_twist_keyboard --ros-args --remap cmd_vel:=rover_twist

TFツリーのグラフィカルなPDFファイルを生成し、各変換のブロードキャスト統計情報（頻度、最新のタイムスタンプなど）を提供
ros2 run tf2_tools view_frames
